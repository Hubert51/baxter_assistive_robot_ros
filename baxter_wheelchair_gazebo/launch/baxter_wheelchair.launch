<?xml version="1.0" encoding="utf-8"?>
<launch>
  <arg name="show_rviz" default="true"/>
  <arg name="baxter" default="true"/>
  <arg name="load_robot_description" default="true"/>

  <group if="$(arg baxter)">
    <!-- These arguments load the electric grippers, for example left_electric_gripper:=true -->
    <arg name="left_electric_gripper" default="true"/>
    <arg name="right_electric_gripper" default="true"/>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param if="$(arg load_robot_description)" name="robot_description"
      command="$(find xacro)/xacro.py --inorder $(find baxter_wheelchair_description)/urdf/baxter_wheelchair.urdf.xacro gazebo:=true"/>

    <!-- Load the software version into the ROS Parameter Server -->
    <param name="rethink/software_version" value="1.2.0" />

    <!-- Publish a static transform between the world and the base of the robot -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_world" args="0 0 0 0 0 0 1 world base" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn Baxter_Wheelchair -->
     <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  	args="-param robot_description -urdf -model bow -x -1.5
	      -J baxter::right_s0 -0.272659
	      -J baxter::right_s1 1.04701
	      -J baxter::right_e0 -0.00123203
	      -J baxter::right_e1 0.49262
	      -J baxter::right_w0 -0.0806423
	      -J baxter::right_w1 -0.0620532
	      -J baxter::right_w2 0.0265941
	      -J baxter::left_s0 0.192483
	      -J baxter::left_s1 1.047
	      -J baxter::left_e0 0.000806359
	      -J baxter::left_e1 0.491094
	      -J baxter::left_w0 -0.178079
	      -J baxter::left_w1 -0.0610333
	      -J baxter::left_w2 -0.0124707" />

    <!-- ros_control baxter launch file -->
    <include file="$(find baxter_sim_hardware)/launch/baxter_sdk_control.launch">
        <arg name="right_electric_gripper" value="$(arg right_electric_gripper)"/>
        <arg name="left_electric_gripper" value="$(arg left_electric_gripper)"/>
    </include>
  </group>

  <group unless="$(arg baxter)">
    <!-- Load the URDF into the ROS Parameter Server -->
    <param if="$(arg load_robot_description)" name="robot_description"
      command="$(find xacro)/xacro.py --inorder $(find baxter_wheelchair_description)/urdf/wheelchair_gazebo.xacro gazebo:=true"/>

    <!-- Run a python script to the send a service call to gazebo_ros to spawn Baxter_Wheelchair -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-param robot_description -urdf -model bow -x -1.5" />

    <!-- publish all the frames to TF -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
      <param name="publish_frequency" value="50"/>
    </node>

  </group>
  
  <!-- controller manager launch file -->
  <include file="$(find baxter_wheelchair_control)/launch/joint_position_control.launch" />

  <!-- robot visualization in Rviz -->
  <group if="$(arg show_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find baxter_wheelchair_gazebo)/launch/urdf.rviz"/> 
  </group>

  <!-- Fake laser -->
 <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/kinect_camera_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/kinect_camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

</launch>
